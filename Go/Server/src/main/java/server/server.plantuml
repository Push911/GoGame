@startuml

title __SERVER's Class Diagram__\n

  namespace server {
    class server.ClientHandler {
        - socket : Socket
        - writer : PrintWriter
        + ClientHandler()
        + getGame()
        + getPlayer()
        + getTranslator()
        + run()
        + send()
        + setPlayer()
    }
  }
  

  namespace server {
    class server.Main {
        {static} + main()
    }
  }
  

  namespace server {
    class server.Server {
        - clients : Vector<ClientHandler>
        - listening : boolean
        - port : int
        - serverSocket : ServerSocket
        - socket : Socket
        + Server()
        + startServer()
        + update()
    }
  }
  

  namespace server {
    class server.Server.StartServerThread {
        - listen : boolean
        + run()
        ~ StartServerThread()
        ~ stopServerThread()
    }
  }
  

  server.ClientHandler .up.|> java.lang.Runnable
  server.ClientHandler -up-|> java.util.Observable
  server.ClientHandler o-- translators.ClientMessagesTranslator : clientMessagesTranslator
  server.ClientHandler o-- gameLogic.Game : game
  server.ClientHandler o-- gameLogic.Player : player
  server.Server .up.|> java.util.Observer
  server.Server o-- gameLogic.Game : game
  server.Server +-down- server.Server.StartServerThread


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
